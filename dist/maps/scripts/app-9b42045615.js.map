{"version":3,"sources":["scripts/app-9b42045615.js"],"names":["Geolocation","$q","$window","getCurrentPosition","deferred","defer","navigator","geolocation","position","resolve","err","reject","promise","$inject","angular","module","factory","provider","$get","parent","base","templates","view","controllers","create","$scope","then","data","coords","longitude","latitude","submission","location","index","abstract","i18nService","setCurrentLang","template","currentResource","gridOptions","columnDefs","cellTemplate","displayName","enableFiltering","field","lat","lng","customer","loadSubmissionPromise","address","geometry","runBlock","$log","$rootScope","AppConfig","FormioAuth","init","config","forEach","forms","url","form","debug","run","routerConfig","$stateProvider","$urlRouterProvider","FormioResourceProvider","FormioFormsProvider","$injector","state","templateUrl","controllerAs","controller","$state","$on","event","appointment","go","dealerId","user","dealer","_id","customerId","appointmentId","resources","resource","name","register","get","appUrl","stateParam","tag","otherwise","constant","moment","toastrConfig","FormioProvider","FormioAuthProvider","$translateProvider","$locationProvider","hashPrefix","setBaseUrl","apiUrl","setAppUrl","setStates","setForceAuth","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","useStaticFilesLoader","prefix","suffix","preferredLanguage","useSanitizeValueStrategy"],"mappings":"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","file":"scripts/app-9b42045615.js","sourcesContent":["(function() {\n  'use strict';\n  angular\n    .module('servicetracker', [\n      'ngSanitize',\n      'ngAria',\n      'ui.router',\n      'ui.bootstrap',\n      'toastr',\n      'pascalprecht.translate',\n      'ngMap',\n      'formio',\n      'ngFormioHelper'\n    ])\n    .factory('Geolocation', Geolocation);\n\n  /** @ngInject */\n  function Geolocation($q, $window) {\n    return {\n      getCurrentPosition: function() {\n        var deferred = $q.defer();\n\n        if (!$window.navigator.geolocation) {\n          return deferred.reject('Geolocation not supported.');\n        }\n\n        $window.navigator.geolocation.getCurrentPosition(\n          function(position) {\n            deferred.resolve(position);\n          },\n          function(err) {\n            deferred.reject(err);\n          }\n        );\n\n        return deferred.promise;\n      }\n    };\n  }\n})();\n\nangular.module('servicetracker')\n  .provider('TimeClockResource', function() {\n    return {\n      $get: function() { return null; },\n      parent: 'appointment',\n      base: 'dealer.customer.appointment.',\n      templates: {\n        view: 'views/timeclock/view.html'\n      },\n      controllers: {\n        create: ['$scope', 'Geolocation', function($scope, Geolocation) {\n          Geolocation.getCurrentPosition()\n            .then(function(data) {\n              if (!data || !data.coords || !data.coords.longitude || !data.coords.latitude) return;\n              $scope.submission.data.location = [data.coords.latitude, data.coords.longitude];\n            })\n            .catch(function() {\n              $scope.submission.data.location = [0, 0];\n            });\n        }]\n      }\n    };\n  });\n\nangular.module('servicetracker')\n  .provider('ServiceResource', function() {\n    return {\n      $get: function() { return null; },\n      parent: 'appointment',\n      base: 'dealer.customer.appointment.',\n      templates: {\n        view: 'views/service/view.html'\n      }\n    };\n  });\n\nangular.module('servicetracker')\n  .provider('PatientResource', function() {\n    return {\n      $get: function() { return null; },\n      templates: {\n        index: 'views/patient/index.html',\n        abstract: 'views/patient/patient.html',\n        view: 'views/patient/view.html'\n      },\n      controllers: {\n        index: ['$scope', 'i18nService', function ($scope, i18nService) {\n          //Translate ui-grid\n          i18nService.setCurrentLang('fr');\n          \n          var template = '<formio-grid-cell class=\"ui-grid-cell-contents\" data=\"COL_FIELD\" component=\"col.colDef.component\"></formio-grid-cell>';\n          $scope.currentResource.gridOptions = {\n            columnDefs: [\n              {\n                cellTemplate: '<a style=\"cursor:pointer;\" ng-click=\"grid.appScope.buttonClick(\\'rowView\\', row)\">' + template + '</a>',\n                displayName: 'Pr√©nom',\n                enableFiltering: true,\n                field: 'data.firstName'\n              },\n              {\n                displayName: 'Nom',\n                enableFiltering: true,\n                field: 'data.lastName'\n              },\n              {\n                displayName: 'Sexe',\n                enableFiltering: false,\n                field: 'data.gender'\n              },\n              {\n                displayName: 'Age',\n                enableFiltering: false,\n                field: 'data.age'\n              },\n              {\n                displayName: 'Taille',\n                enableFiltering: false,\n                field: 'data.height'\n              },\n              {\n                displayName: 'Poids',\n                enableFiltering: false,\n                field: 'data.weight'\n              }\n            ]\n          };\n        }]\n      }\n    };\n  });\n\nangular.module('servicetracker')\n  .provider('EquipmentResource', function() {\n    return {\n      $get: function() { return null; },\n      parent: 'customer',\n      base: 'dealer.customer.',\n      templates: {\n        view: 'views/equipment/view.html'\n      }\n    };\n  });\n\nangular.module('servicetracker')\n  .provider('DealerResource', function() {\n    return {\n      $get: function() { return null; },\n      templates: {\n        abstract: 'views/dealer/dealer.html',\n        view: 'views/dealer/view.html'\n      }\n    };\n  });\n\nangular.module('servicetracker')\n  .provider('CustomerResource', function() {\n    return {\n      $get: function() { return null; },\n      parent: 'dealer',\n      base: 'dealer.',\n      templates: {\n        abstract: 'views/customer/customer.html',\n        view: 'views/customer/view.html'\n      },\n      controllers: {\n        view: ['$scope', function($scope) {\n          $scope.position = {lat: '40.74', lng: '-74.18'};\n          $scope.customer.loadSubmissionPromise.then(function(customer) {\n            if (\n              customer.data.address &&\n              customer.data.address.geometry &&\n              customer.data.address.geometry.location\n            ) {\n              $scope.position.lat = customer.data.address.geometry.location.lat;\n              $scope.position.lng = customer.data.address.geometry.location.lng;\n            }\n          });\n        }]\n      }\n    };\n  });\n\nangular.module('servicetracker')\n  .provider('ContractorResource', function() {\n    return {\n      $get: function() { return null; },\n      parent: 'dealer',\n      base: 'dealer.'\n    };\n  });\n\nangular.module('servicetracker')\n  .provider('AppointmentResource', function() {\n    return {\n      $get: function() { return null; },\n      parent: 'customer',\n      base: 'dealer.customer.',\n      templates: {\n        abstract: 'views/appointment/appointment.html',\n        view: 'views/appointment/view.html'\n      }\n    };\n  });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('servicetracker')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock(\n    $log,\n    $rootScope,\n    AppConfig,\n    FormioAuth\n  ) {\n    // Initialize the Form.io authentication system.\n    FormioAuth.init();\n\n    // Allow the app to have access to configurations.\n    $rootScope.config = AppConfig;\n\n    // Add the forms to the root scope.\n    angular.forEach(AppConfig.forms, function(url, form) {\n      $rootScope[form] = url;\n    });\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('servicetracker')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig(\n    $stateProvider,\n    $urlRouterProvider,\n    FormioResourceProvider,\n    FormioFormsProvider,\n    AppConfig,\n    $injector\n  ) {\n    $stateProvider\n      .state('home', {\n        url: '/?',\n        templateUrl: 'views/home.html'\n      })\n      .state('appointments', {\n        url: '/appointments',\n        templateUrl: 'views/appointment/all.html',\n        controllerAs: 'appointments',\n        controller: ['$scope', '$state', '$rootScope', function($scope, $state, $rootScope) {\n          $scope.$on('rowView', function(event, appointment) {\n            $state.go('dealer.customer.appointment.view', {\n              dealerId: $rootScope.user.data.dealer._id,\n              customerId: appointment.data.customer._id,\n              appointmentId: appointment._id\n            });\n          });\n        }]\n      });\n\n    // Register all of the resources.\n    angular.forEach(AppConfig.resources, function(resource, name) {\n      FormioResourceProvider.register(name, resource.form, $injector.get(resource.resource + 'Provider'));\n    });\n\n    // Register the form provider for the customer.\n    FormioFormsProvider.register('customer', AppConfig.appUrl, {\n      field: [{\n        name: 'customer',\n        stateParam: 'customerId'\n      }],\n      base: 'dealer.customer.',\n      tag: 'customer'\n    });\n\n    // Register the form provider for the patient.\n    FormioFormsProvider.register('patient', AppConfig.appUrl, {\n      field: [{\n        name: 'patient',\n        stateParam: 'patientId'\n      }],\n      base: 'patient.',\n      tag: 'patient'\n    });\n\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n/* global moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('servicetracker')\n    .constant('moment', moment);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('servicetracker')\n    .config(config);\n\n  /** @ngInject */\n  function config(\n    toastrConfig,\n    FormioProvider,\n    FormioAuthProvider,\n    AppConfig,\n    $translateProvider,\n    $locationProvider\n  ) {\n    $locationProvider.hashPrefix('');\n\n    // Set the base url for formio.\n    FormioProvider.setBaseUrl(AppConfig.apiUrl);\n    FormioProvider.setAppUrl(AppConfig.appUrl);\n\n    // Initialize our FormioAuth provider states.\n    FormioAuthProvider.setStates('auth.login', 'home');\n    FormioAuthProvider.setForceAuth(true);\n    FormioAuthProvider.register('login', 'user');\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n\n    //Tranlation\n    $translateProvider.useStaticFilesLoader({\n      prefix: '/languages/locale-',\n      suffix: '.json'\n    });\n    $translateProvider.preferredLanguage('fr');\n    $translateProvider.useSanitizeValueStrategy('escape');\n  }\n})();\n"],"sourceRoot":"/source/"}